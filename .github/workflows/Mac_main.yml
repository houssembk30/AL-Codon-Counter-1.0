name: Build and Release for macOS

on:
  push:
    branches:
      - master
    paths:
      - '.github/workflows/Mac_main.yml'
    paths-ignore:
      - 'pyproject.toml'


jobs:
  build:
    strategy:
      matrix:
        os: [macos-latest]
        python-version: [3.9, 3.10, 3.11]
        architecture: [x64, arm64]
        exclude:
          - python-version: 3.1
          - python-version: 3.6
            architecture: arm64
          - python-version: 3.7
            architecture: arm64

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python for x64 and arm64
      if: matrix.architecture == 'x64' || matrix.architecture == 'arm64'
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies for macOS
      if: matrix.os == 'macos-latest'
      run: |
        brew update
        brew install openblas gcc qt cmake p7zip
        brew link --force qt
        export PATH="/usr/local/opt/qt/bin:$PATH" || export PATH="/opt/homebrew/opt/qt/bin:$PATH"
        export PKG_CONFIG_PATH="/usr/local/opt/qt/lib/pkgconfig" || export PKG_CONFIG_PATH="/opt/homebrew/opt/qt/lib/pkgconfig"
        brew install python@${{ matrix.python-version }}

    - name: Install dependencies using Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry install

    - name: Ensure dist directory exists for macOS
      if: matrix.os == 'macos-latest'
      run: mkdir -p dist

    - name: Unzip PyQt5 files for macOS (x64)
      if: matrix.architecture == 'x64'
      run: |
        mkdir pyqt5_files
        curl -L -o pyqt5_files.part1.rar https://raw.githubusercontent.com/MariemJelassi/AL-Codon-Counter-1.0/main/pyqt5_files.part1.rar
        curl -L -o pyqt5_files.part2.rar https://raw.githubusercontent.com/MariemJelassi/AL-Codon-Counter-1.0/main/pyqt5_files.part2.rar
        curl -L -o pyqt5_files.part3.rar https://raw.githubusercontent.com/MariemJelassi/AL-Codon-Counter-1.0/main/pyqt5_files.part3.rar
        7z x pyqt5_files.part1.rar -opyqt5_files/
        7z x pyqt5_files.part2.rar -opyqt5_files/
        7z x pyqt5_files.part3.rar -opyqt5_files/

    - name: Unzip PyQt5 files for macOS (arm64)
      if: matrix.architecture == 'arm64'
      run: |
        mkdir pyqt5_files
        curl -L -o pyqt5_files.part1.rar https://raw.githubusercontent.com/MariemJelassi/AL-Codon-Counter-1.0/main/pyqt5_files.part1.rar
        curl -L -o pyqt5_files.part2.rar https://raw.githubusercontent.com/MariemJelassi/AL-Codon-Counter-1.0/main/pyqt5_files.part2.rar
        curl -L -o pyqt5_files.part3.rar https://raw.githubusercontent.com/MariemJelassi/AL-Codon-Counter-1.0/main/pyqt5_files.part3.rar
        7z x pyqt5_files.part1.rar -opyqt5_files/
        7z x pyqt5_files.part2.rar -opyqt5_files/
        7z x pyqt5_files.part3.rar -opyqt5_files/

    - name: Install PyQt5 from local files for macOS (x64)
      if: matrix.architecture == 'x64'
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/pyqt5_files
        echo "Installing PyQt5 from local files..."
        ls pyqt5_files
        python${{ matrix.python-version }} -m pip install --no-index --find-links=pyqt5_files PyQt5==5.15.4
        echo "PyQt5 installation complete."

    - name: Install PyQt5 from local files for macOS (arm64)
      if: matrix.architecture == 'arm64'
      run: |
        export PYTHONPATH=$PYTHONPATH:$(pwd)/pyqt5_files
        echo "Installing PyQt5 from local files..."
        ls pyqt5_files
        python${{ matrix.python-version }} -m pip install --no-index --find-links=pyqt5_files PyQt5==5.15.4
        echo "PyQt5 installation complete."

    - name: Build executable for macOS (x64)
      if: matrix.architecture == 'x64'
      run: |
        chmod +x build_mac.sh
        ./build_mac.sh

    - name: Build executable for macOS (arm64)
      if: matrix.architecture == 'arm64'
      run: |
        chmod +x build_mac.sh
        ./build_mac.sh

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: built-application-${{ matrix.os }}-${{ matrix.architecture }}-python-${{ matrix.python-version }}
        path: |
          dist/*
          build/*.run
          build/*.pkg
